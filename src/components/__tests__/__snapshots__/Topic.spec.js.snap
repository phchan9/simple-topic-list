// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Topic Component render correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <li
    className="Topic list-group-item"
>
    <h5>
        This is the title
    </h5>
    <div>
        <button
            className="btn btn-default"
            onClick={[Function]}
            type="button"
        >
            UpVote 
            <span
                className="badge"
            >
                30
            </span>
        </button>
        <button
            className="btn btn-default"
            onClick={[Function]}
            type="button"
        >
            DownVote 
            <span
                className="badge"
            >
                50
            </span>
        </button>
    </div>
</li>,
  "nodes": Array [
    <li
      className="Topic list-group-item"
>
      <h5>
            This is the title
      </h5>
      <div>
            <button
                  className="btn btn-default"
                  onClick={[Function]}
                  type="button"
            >
                  UpVote 
                  <span
                        className="badge"
                  >
                        30
                  </span>
            </button>
            <button
                  className="btn btn-default"
                  onClick={[Function]}
                  type="button"
            >
                  DownVote 
                  <span
                        className="badge"
                  >
                        50
                  </span>
            </button>
      </div>
</li>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Topic
        downVotes={50}
        onDownVoteCallBack={[Function]}
        onUpVoteCallBack={[Function]}
        title="This is the title"
        upVotes={30}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "downVotes": 50,
          "onDownVoteCallBack": [Function],
          "onUpVoteCallBack": [Function],
          "title": "This is the title",
          "upVotes": 30,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <li
          className="Topic list-group-item"
>
          <h5>
                    This is the title
          </h5>
          <div>
                    <button
                              className="btn btn-default"
                              onClick={[Function]}
                              type="button"
                    >
                              UpVote 
                              <span
                                        className="badge"
                              >
                                        30
                              </span>
                    </button>
                    <button
                              className="btn btn-default"
                              onClick={[Function]}
                              type="button"
                    >
                              DownVote 
                              <span
                                        className="badge"
                              >
                                        50
                              </span>
                    </button>
          </div>
</li>,
        "_debugID": 2,
        "_renderedOutput": <li
          className="Topic list-group-item"
>
          <h5>
                    This is the title
          </h5>
          <div>
                    <button
                              className="btn btn-default"
                              onClick={[Function]}
                              type="button"
                    >
                              UpVote 
                              <span
                                        className="badge"
                              >
                                        30
                              </span>
                    </button>
                    <button
                              className="btn btn-default"
                              onClick={[Function]}
                              type="button"
                    >
                              DownVote 
                              <span
                                        className="badge"
                              >
                                        50
                              </span>
                    </button>
          </div>
</li>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Topic
    downVotes={50}
    onDownVoteCallBack={[Function]}
    onUpVoteCallBack={[Function]}
    title="This is the title"
    upVotes={30}
/>,
}
`;
